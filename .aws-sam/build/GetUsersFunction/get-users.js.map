{
  "version": 3,
  "sources": ["../../../src/handlers/users/get-users.ts", "../../../src/repos/users.repo.ts", "../../../src/services/users.service.ts"],
  "sourcesContent": ["import { APIGatewayProxyEvent, APIGatewayProxyResult } from \"aws-lambda\";\nimport { UserService } from \"../../services/users.service\";\n\n\nexport const getUsersHandler = async (event: APIGatewayProxyEvent): Promise<APIGatewayProxyResult> => {\n    let response: APIGatewayProxyResult;\n    try {\n        var usersService = new UserService();\n        response = {\n            statusCode: 200,\n            body: JSON.stringify(usersService.getUsers()),\n        };\n    } catch (err) {\n        console.log(err);\n        response = {\n            statusCode: 500,\n            body: JSON.stringify({\n                message: 'some error happened',\n            }),\n        };\n    }\n    return response;\n};\n", "import { User } from \"../models/users.model\"\n\n\nvar users: User[] = [\n    {id: 1, name: 'Sai', email: 'abc@abc.com', role: 'employee', isActive: true},\n    {id: 2, name: 'Jhon', email: 'qwee@abc.com', role: 'employee', isActive: true},\n]\n\nexport { users };\n", "import { users } from \"../repos/users.repo\"\n\n\nexport class UserService {\n    getUsers(){\n        return users;\n    }\n}  "],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,qBAAAE,IAAA,eAAAC,EAAAH,GCGA,IAAII,EAAgB,CAChB,CAAC,GAAI,EAAG,KAAM,MAAO,MAAO,cAAe,KAAM,WAAY,SAAU,EAAI,EAC3E,CAAC,GAAI,EAAG,KAAM,OAAQ,MAAO,eAAgB,KAAM,WAAY,SAAU,EAAI,CACjF,ECHO,IAAMC,EAAN,KAAkB,CACrB,UAAU,CACN,OAAOC,CACX,CACJ,EFHO,IAAMC,EAAkB,MAAOC,GAAgE,CAClG,IAAIC,EACJ,GAAI,CACA,IAAIC,EAAe,IAAIC,EACvBF,EAAW,CACP,WAAY,IACZ,KAAM,KAAK,UAAUC,EAAa,SAAS,CAAC,CAChD,CACJ,OAASE,EAAP,CACE,QAAQ,IAAIA,CAAG,EACfH,EAAW,CACP,WAAY,IACZ,KAAM,KAAK,UAAU,CACjB,QAAS,qBACb,CAAC,CACL,CACJ,CACA,OAAOA,CACX",
  "names": ["get_users_exports", "__export", "getUsersHandler", "__toCommonJS", "users", "UserService", "users", "getUsersHandler", "event", "response", "usersService", "UserService", "err"]
}
